'''
나삼성씨가 새로 나온 게임을 구입하였다

이 게임은 아래와 같이 가로, 세로 N * N 크기의 지도에 주어진 사과를 순서대로 먹는 게임이다.
사과는 번호 순서에 따라 차례대로 지도에 나타난다. 예를 들어 아래와 같이 지도가 주어졌다고 가정하자.
1번 사과를 먹으면 2번 사과가 나타나고, 2번 사과를 먹으면 3번 사과가 나타난다.
따라서 2번 사과를 1번 사과보다 먼저 먹는 것은 불가능하다. 마찬가지로 3번 사과를 1, 2번 사과보다 먼저 먹을 수 없다.

[그림1]

플레이어의 시작 위치는 좌측 상단으로 고정되어있고, 게임을 시작하면 자동으로 화살표 방향으로 전진한다.
뒤로 이동은 불가능하기 때문에 옆에 있는 사과를 먹기 위해서는 회전해야 한다.
그런데 키보드의 방향키 하나가 고장이 나서 오직 오른쪽으로만 회전이 가능하다.

키보드의 오른쪽 방향키를 누를 때 마다 오른쪽으로 90도씩 회전한다.
한 자리에서 이동하지 않으면 오직 한번만 회전이 가능하다. 즉, 제자리에서 여러 번 회전은 불가능하다.
사과를 먹음과 동시에 회전하는 것도 가능하다. 지도 상에 모든 사과를 먹으면 게임이 종료된다.
회전 횟수를 최소화하여 순서대로 모든 사과를 먹으려면, 최소 몇 번의 회전이 필요한지 구하는 프로그램을 작성하라.

예제에서 주어진 순서대로 사과를 먹으려면 [그림2]와 같이 최소 7번의 회전이 필요하다.

[그림2]

[제약사항]

지도의 한 변의 크기 N은 5 이상 10 이하의 정수이다. (5 ≤ N ≤ 10)

사과의 개수 M은 2 이상 10 이하의 정수이다. (2 ≤ M ≤ 10)

새로운 사과가 나타날 때 바로 직전 사과와 동일한 열 / 행에 나타나지 않는다. (그림3의 회색 영역 참조)

지도의 가장자리 영역에는 사과가 나타나지 않는다. (그림4의 회색 영역 참고)

[그림3][그림4]

[입력]

입력의 맨 첫 줄에는 총 테스트 케이스의 개수 T가 주어지고, 그 다음 줄부터 T개의 테스트 케이스가 주어진다.
테스트 케이스의 첫 번째 줄에는 지도의 한 변의 크기 N이 주어진다.
그 다음 줄부터 N개의 줄에서 지도 정보가 주어진다.
지도상에 사과의 위치는 0보다 큰 숫자로 주어지며, 숫자의 순서대로 사과를 먹어야 한다.

[출력]

출력은 "#t" 를 찍고 한 칸 띄운 다음 정답을 출력한다.
(t는 테스트 케이스의 번호를 의미하며 1부터 시작한다.)
정답은 최소 회전 횟수를 출력한다.

[입출력 예]
입력 예
5

5
0 0 0 0 0
0 0 0 3 0
0 1 0 0 0
0 0 2 0 0
0 0 0 0 0

5

…

// 총 테스트 케이스 개수 T = 5

// 첫 번째 테스트 케이스, N = 5
// 지도정보

// 숫자 3 은 세번째 사과 위치를 의미함
// 숫자 1 은 첫번째 사과 위치를 의미함
// 숫자 2 은 두번째 사과 위치를 의미함

// 두 번째 테스트 케이스, N = 5
// 나머지는 sample_input.txt 참조

출력 예
# 1 7
# 2 9
# 3 10
# 4 14
# 5 23
'''